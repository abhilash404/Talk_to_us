//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub user_id: i32,
    pub name: String,
    #[sea_orm(unique)]
    pub email: String,
    pub password_hash: String,
    pub role: String,
    pub phone: Option<String>,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::agents::Entity")]
    Agents,
    #[sea_orm(has_many = "super::ticket_history::Entity")]
    TicketHistory,
}

impl Related<super::agents::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Agents.def()
    }
}

impl Related<super::ticket_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TicketHistory.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
